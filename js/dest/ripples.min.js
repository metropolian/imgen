!function(t,e,o,i){"use strict";function n(e,o){a=this,this.element=t(e),this.options=t.extend({},p,o),this._defaults=p,this._name=r,this.init()}var r="ripples",a=null,p={};n.prototype.init=function(){var o=this.element;o.on("mousedown touchstart",function(i){if(!a.isTouch()||"mousedown"!==i.type){o.find(".ripple-wrapper").length||o.append('<div class="ripple-wrapper"></div>');var n=o.children(".ripple-wrapper"),r=a.getRelY(n,i),p=a.getRelX(n,i);if(r||p){var s=a.getRipplesColor(o),u=t("<div></div>");u.addClass("ripple").css({left:p,top:r,"background-color":s}),n.append(u),function(){return e.getComputedStyle(u[0]).opacity}(),a.rippleOn(o,u),setTimeout(function(){a.rippleEnd(u)},500),o.on("mouseup mouseleave touchend",function(){u.data("mousedown","off"),"off"===u.data("animating")&&a.rippleOut(u)})}}})},n.prototype.getNewSize=function(t,e){return Math.max(t.outerWidth(),t.outerHeight())/e.outerWidth()*2.5},n.prototype.getRelX=function(t,e){var o=t.offset();return a.isTouch()?(e=e.originalEvent,1===e.touches.length&&e.touches[0].pageX-o.left):e.pageX-o.left},n.prototype.getRelY=function(t,e){var o=t.offset();return a.isTouch()?(e=e.originalEvent,1===e.touches.length&&e.touches[0].pageY-o.top):e.pageY-o.top},n.prototype.getRipplesColor=function(t){var o=t.data("ripple-color")?t.data("ripple-color"):e.getComputedStyle(t[0]).color;return o},n.prototype.hasTransitionSupport=function(){var t=o.body||o.documentElement,e=t.style,n=e.transition!==i||e.WebkitTransition!==i||e.MozTransition!==i||e.MsTransition!==i||e.OTransition!==i;return n},n.prototype.isTouch=function(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)},n.prototype.rippleEnd=function(t){t.data("animating","off"),"off"===t.data("mousedown")&&a.rippleOut(t)},n.prototype.rippleOut=function(t){t.off(),a.hasTransitionSupport()?t.addClass("ripple-out"):t.animate({opacity:0},100,function(){t.trigger("transitionend")}),t.on("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd",function(){t.remove()})},n.prototype.rippleOn=function(t,e){var o=a.getNewSize(t,e);a.hasTransitionSupport()?e.css({"-ms-transform":"scale("+o+")","-moz-transform":"scale("+o+")","-webkit-transform":"scale("+o+")",transform:"scale("+o+")"}).addClass("ripple-on").data("animating","on").data("mousedown","on"):e.animate({width:2*Math.max(t.outerWidth(),t.outerHeight()),height:2*Math.max(t.outerWidth(),t.outerHeight()),"margin-left":Math.max(t.outerWidth(),t.outerHeight())*-1,"margin-top":Math.max(t.outerWidth(),t.outerHeight())*-1,opacity:.2},500,function(){e.trigger("transitionend")})},t.fn.ripples=function(e){return this.each(function(){t.data(this,"plugin_"+r)||t.data(this,"plugin_"+r,new n(this,e))})}}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
