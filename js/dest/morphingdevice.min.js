function getHiddenProp(){var e=["webkit","moz","ms","o"];if("hidden"in document)return"hidden";for(var n=0;n<e.length;n++)if(e[n]+"Hidden"in document)return e[n]+"Hidden";return null}function isHidden(){var e=getHiddenProp();return!!e&&document[e]}var MorphingDevice=function(e,n){function i(){N.style.display="none",N.onclick=function(){o(),h.className=g?h.className.replace(/\b md-rotated\b/,""):h.className+" md-rotated";var e=g?n.devices[p].imgsrc:n.devices[p].rotatedsrc;return r(e),g=!g,!1},h.appendChild(N);var e=getHiddenProp();if(e){var i=e.replace(/[H|h]idden/,"")+"visibilitychange";document.addEventListener(i,function(){f&&(isHidden()?(o(),f=!0):d())})}}function t(){h.className="md-device "+n.devices[p].cName,g=!1,N.style.display=n.devices[p].canRotate?"":"none",r(n.devices[p].imgsrc)}function r(e){var n=T.parentNode,i=document.createElement("img");i.setAttribute("src",e),n.childNodes.length>1&&n.removeChild(n.firstChild),n.insertBefore(i,T),T.className="md-fadeout",T.addEventListener(v,function(e){T=i,null!=this.parentNode&&this.parentNode.removeChild(this)},!1)}function d(){f=!0,a()}function a(){l=setTimeout(function(){var e=p<devicesTotal-1?p+1:0;u(nav.children[e]),p=e,t(),n.autoplay&&a()},n.interval)}function o(){f=!1,clearTimeout(l)}function c(e){p=e}function s(){return p}function u(e){var n=nav.children;n[p].className=n[p].className.replace(/\bmd-current\b/,""),e.className="md-current"}var l,m={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",msTransition:"MSTransitionEnd",transition:"transitionend"},v=m[Modernizr.prefixed("transition")],f=!1,h=e.querySelector("div.md-device"),p=0,g=!1,N=document.createElement("button"),T=h.querySelector("a > img");return i(),{init:i,setCurrent:c,getCurrent:s,changeDevice:t,startSlideshow:d,stopSlideshow:o,updateCurrentTrigger:u}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
